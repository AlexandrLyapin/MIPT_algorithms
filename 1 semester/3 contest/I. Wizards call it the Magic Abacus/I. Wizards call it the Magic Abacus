#include <iostream>

void Calculator(int n, int64_t* dp) {
  dp[0] = 0;
  if (n > 0) {
    dp[1] = 0;
  }
  if (n > 1) {
    dp[2] = 1;
  }
  if (n > 2) {
    dp[3] = 1;
  }
  for (int i = 4; i <= n; ++i) {
    if (i % 6 == 0) {
      int64_t val = std::min(dp[i / 3], dp[i / 2]);
      dp[i] = std::min(val, dp[i - 1]) + 1;
    } else {
      if (i % 3 == 0) {
        dp[i] = std::min(dp[i / 3], dp[i - 1]) + 1;
      } else {
        if (i % 2 == 0) {
          dp[i] = std::min(dp[i / 2], dp[i - 1]) + 1;
        } else {
          dp[i] = dp[i - 1] + 1;
        }
      }
    }
  }
  std::cout << dp[n];
}

int main() {
  int n;
  std::cin >> n;
  auto dp = new int64_t[n + 1];
  Calculator(n, dp);
  delete[] dp;
}
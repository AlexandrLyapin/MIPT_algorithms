#include <iostream>
#include <cmath>
#include <cstring>

int ThreeMin(int x, int y, int z) {
  int first = std::min(x, y);
  return std::min(first, z);
}

int Equality(char i, char j) {
  if (i == j) {
    return 0;
  }
  return 1;
}

void TheDailyProphet(char* first, char* second, int m, int n) {
  auto dp = new int*[m + 1];
  for (int i = 0; i <= m; ++i) {
    dp[i] = new int[n + 1];
  }
  for (int i = 0; i < m + 1; i++) {
    for (int j = 0; j < n + 1; j++) {
      if (i == 0 && j == 0) {
        dp[i][j] = 0;
      }
      if (i == 0 && j > 0) {
        dp[i][j] = j;
      }
      if (i > 0 && j == 0) {
        dp[i][j] = i;
      }
      if (j > 0 && i > 0) {
        dp[i][j] =
            ThreeMin(dp[i][j - 1] + 1, dp[i - 1][j] + 1, dp[i - 1][j - 1] + Equality(first[i - 1], second[j - 1]));
      }
    }
  }
  std::cout << dp[m][n];
  for (int i = 0; i <= m; ++i) {
    delete[] dp[i];
  }
  delete[] dp;
}

int main() {
  auto first = new char[5001];
  std::cin.get(first, 5001);
  int m = std::strlen(first);
  auto second = new char[5001];
  std::cin.ignore();
  std::cin.get(second, 5001);
  int n = std::strlen(second);
  TheDailyProphet(first, second, m, n);
  delete[] first;
  delete[] second;
}
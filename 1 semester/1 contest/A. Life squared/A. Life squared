#include <iostream>

void Life(int** a, int n, int t) {
  auto b = new int*[n];
  for (int i = 0; i < n; ++i) {
    b[i] = new int[n];
  }
  int r = 0;
  while (r < t) {
    for (int i = 0; i < n; ++i) {
      for (int j = 0; j < n; ++j) {
        if (i == 0 && j == 0) {
          if (a[i][j] == 0) {
            if ((a[1][0] + a[0][1] + a[1][1]) == 3) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          } else {
            if ((a[1][0] + a[0][1] + a[1][1]) == 3 || (a[1][0] + a[0][1] + a[1][1]) == 2) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          }
        }
        if (i == n - 1 && j == n - 1) {
          if (a[i][j] == 0) {
            if ((a[n - 1][n - 2] + a[n - 2][n - 2] + a[n - 2][n - 1]) == 3) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          } else {
            if ((a[n - 1][n - 2] + a[n - 2][n - 2] + a[n - 2][n - 1]) == 3 ||
                (a[n - 1][n - 2] + a[n - 2][n - 2] + a[n - 2][n - 1]) == 2) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          }
        }
        if (i == n - 1 && j == 0) {
          if (a[i][j] == 0) {
            if ((a[n - 2][0] + a[n - 2][n - 2] + a[n - 1][n - 2]) == 3) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          } else {
            if ((a[n - 2][0] + a[n - 2][n - 2] + a[n - 1][n - 2]) == 3 ||
                (a[n - 2][0] + a[n - 2][n - 2] + a[n - 1][n - 2]) == 2) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          }
        }
        if (i == 0 && j == n - 1) {
          if (a[i][j] == 0) {
            if ((a[0][n - 2] + a[n - 2][n - 2] + a[n - 2][n - 1]) == 3) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          } else {
            if ((a[0][n - 2] + a[n - 2][n - 2] + a[n - 2][n - 1]) == 3 ||
                (a[0][n - 2] + a[n - 2][n - 2] + a[n - 2][n - 1]) == 2) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          }
        }
        if (i == 0 && j != 0 && j != n - 1) {
          if (a[i][j] == 0) {
            if ((a[i][j - 1] + a[i][j + 1] + a[i + 1][j - 1] + a[i + 1][j] + a[i + 1][j + 1]) == 3) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          } else {
            if ((a[i][j - 1] + a[i][j + 1] + a[i + 1][j - 1] + a[i + 1][j] + a[i + 1][j + 1]) == 3 ||
                (a[i][j - 1] + a[i][j + 1] + a[i + 1][j - 1] + a[i + 1][j] + a[i + 1][j + 1]) == 2) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          }
        }
        if (i == n - 1 && j != 0 && j != n - 1) {
          if (a[i][j] == 0) {
            if ((a[i][j - 1] + a[i][j + 1] + a[i - 1][j - 1] + a[i - 1][j] + a[i - 1][j + 1]) == 3) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          } else {
            if ((a[i][j - 1] + a[i][j + 1] + a[i - 1][j - 1] + a[i - 1][j] + a[i - 1][j + 1]) == 3 ||
                (a[i][j - 1] + a[i][j + 1] + a[i - 1][j - 1] + a[i - 1][j] + a[i - 1][j + 1]) == 2) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          }
        }
        if (i != 0 && i != n - 1 && j == 0) {
          if (a[i][j] == 0) {
            if ((a[i + 1][j] + a[i - 1][j] + a[i - 1][j + 1] + a[i][j + 1] + a[i + 1][j + 1]) == 3) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          } else {
            if ((a[i + 1][j] + a[i - 1][j] + a[i - 1][j + 1] + a[i][j + 1] + a[i + 1][j + 1]) == 3 ||
                (a[i + 1][j] + a[i - 1][j] + a[i - 1][j + 1] + a[i][j + 1] + a[i + 1][j + 1]) == 2) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          }
        }
        if (i != 0 && i != n - 1 && j == n - 1) {
          if (a[i][j] == 0) {
            if ((a[i + 1][j] + a[i - 1][j] + a[i - 1][j - 1] + a[i][j - 1] + a[i + 1][j - 1]) == 3) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          } else {
            if ((a[i + 1][j] + a[i - 1][j] + a[i - 1][j - 1] + a[i][j - 1] + a[i + 1][j - 1]) == 3 ||
                (a[i + 1][j] + a[i - 1][j] + a[i - 1][j - 1] + a[i][j - 1] + a[i + 1][j - 1]) == 2) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          }
        }
        if (i != 0 && i != n - 1 && j != n - 1 && j != 0) {
          if (a[i][j] == 0) {
            if ((a[i + 1][j] + a[i - 1][j] + a[i][j + 1] + a[i][j - 1] + a[i - 1][j - 1] + a[i + 1][j + 1] +
                 a[i + 1][j - 1] + a[i - 1][j + 1]) == 3) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          } else {
            if ((a[i + 1][j] + a[i - 1][j] + a[i][j + 1] + a[i][j - 1] + a[i - 1][j - 1] + a[i + 1][j + 1] +
                 a[i + 1][j - 1] + a[i - 1][j + 1]) == 3 ||
                (a[i + 1][j] + a[i - 1][j] + a[i][j + 1] + a[i][j - 1] + a[i - 1][j - 1] + a[i + 1][j + 1] +
                 a[i + 1][j - 1] + a[i - 1][j + 1]) == 2) {
              b[i][j] = 1;
            } else {
              b[i][j] = 0;
            }
          }
        }
      }
    }

    for (int i = 0; i < n; ++i) {
      for (int j = 0; j < n; ++j) {
        a[i][j] = b[i][j];
      }
    }
    ++r;
  }
  for (int i = 0; i < n; ++i) {
    delete[] b[i];
  }
  delete[] b;
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < n; ++j) {
      std::cout << a[i][j] << " ";
    }
    std::cout << std::endl;
  }
}

int main() {
  int n, t;
  std::cin >> n >> t;
  auto a = new int*[n];
  for (int i = 0; i < n; ++i) {
    a[i] = new int[n];
  }
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < n; ++j) {
      std::cin >> a[i][j];
    }
  }
  Life(a, n, t);
  for (int i = 0; i < n; ++i) {
    delete[] a[i];
  }
  delete[] a;
}